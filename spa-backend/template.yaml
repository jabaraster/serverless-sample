AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      Schema:
      - Name: email
        StringAttributeConstraints:
          MinLength: 0
          MaxLength: 2048
        Required: true
        AttributeDataType: String
        Mutable: true
      AliasAttributes: [email]
      AutoVerifiedAttributes: [email]
      EmailVerificationSubject: Your verification code
      EmailVerificationMessage: Your app verification code is {####}.
      MfaConfiguration: "OFF"
      UserPoolName:
        Ref: AWS::StackName
      Policies:
        PasswordPolicy:
          RequireLowercase: false
          RequireSymbols: false
          RequireNumbers: false
          MinimumLength: 6
          RequireUppercase: false
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: photo-app
      GenerateSecret: false
      UserPoolId: !Ref UserPool
  optionsImages:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: options.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 3
      Events:
        Api:
          Type: Api
          Properties:
            Path: /images
            Method: OPTIONS
  postImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: postImage.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 15
      Role: arn:aws:iam::195957709288:role/lambda-dynamodb-access
      Environment:
        Variables: 
          BUCKET_NAME: jabara-serverless-app-photos
          TABLE_NAME : photos
      Events:
        Api:
          Type: Api
          Properties:
            Path: /images
            Method: POST
  updateImages:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: updateImage.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 15
      Role: arn:aws:iam::195957709288:role/lambda-dynamodb-access
      Environment:
        Variables: 
          BUCKET_NAME: jabara-serverless-app-photos
          TABLE_NAME : photos
      Events:
        Api:
          Type: Api
          Properties:
            Path: /images
            Method: PUT
  getImages:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: getImages.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 15
      Role: arn:aws:iam::195957709288:role/lambda-dynamodb-access
      Environment:
        Variables: 
          BUCKET_NAME: jabara-serverless-app-photos
          TABLE_NAME : photos
      Events:
        Api:
          Type: Api
          Properties:
            Path: /images
            Method: GET
  optionsImageById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: options.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 3
      Events:
        Api:
          Type: Api
          Properties:
            Path: /image/{id}
            Method: OPTIONS
  getImageById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: getImageById.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 15
      Role: arn:aws:iam::195957709288:role/lambda-dynamodb-access
      Environment:
        Variables: 
          BUCKET_NAME: jabara-serverless-app-photos
          TABLE_NAME : photos
      Events:
        Api:
          Type: Api
          Properties:
            Path: /image/{id}
            Method: GET
  deleteImageById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/
      Handler: deleteImageById.lambdaHandler
      Runtime: nodejs10.x
      Description : ""
      MemorySize: 128
      Timeout: 15
      Role: arn:aws:iam::195957709288:role/lambda-dynamodb-access
      Environment:
        Variables: 
          BUCKET_NAME: jabara-serverless-app-photos
          TABLE_NAME : photos
      Events:
        Api:
          Type: Api
          Properties:
            Path: /image/{id}
            Method: DELETE
Outputs:
  UserPoolId:
    Value: !Ref UserPool
  UserPoolClientId:
    Value: !Ref UserPoolClient